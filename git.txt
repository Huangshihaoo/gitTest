如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文
千万不要使用Windows自带的记事本编辑任何文本文件。

mkdir // 创建文件夹
rmdir // 删除文件夹
>txt.md // 创建文件
rm txt.md // 删除文件
cat file // 查看文件
ls // 查看当前目录
cat file // 查看文件内容

本地文件夹就是工作区
git add 后就是暂存区
git commit -m 之后就是在仓库

全局设置
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

生成ssh
ssh-keygen -t ed25519 -C "your_email@example.com"
回车
密码
相同密码
.pub里的东西就是上传github ssh的密钥



1、git init // 创建本地仓库
2、创建README.md
3、git add 文件夹/. // 添加文件夹下的所有文件到“暂存区”
4、git status // 查看暂存区状态以及修改状态
5、git diff // 查看修改处， 如果提交到暂存处了就没办法查看啦
5.1、git diff --cached // 查看本地和仓库的区别
5.2、 git diff HEAD -- readme.md // 查看本地和仓库里的区别
6、 git commit -m '描述' // 提交到本地仓库
7、git log 查看上传日志
8、git reset --hard HEAD^ // 回退上一个版本 HEAD^^上上个
8.1、git reset --hard 开头id // 能记住id?
9、git reflog // 查看命令记录
10、git checkout -- readme.txt // 撤销工作区修改 如果提交到缓存区就撤销不了，要先撤销缓存区
10.1、git reset HEAD <file> // 撤销暂存区修改 内容变回工作区
11、git rm txt.md // 删除文件
11.1、 git checkout -- txt.md // 把文件恢复，前提是仓库里还有，仓库里也没了就回退吧
12、github创建远程仓库
12.1、ssh-keygen -t ed25519 -C "your_email@example.com" // 创建ssh
12.2、.pub里的东西就是上传github ssh的密钥
13、git remote add origin git@github.com:Huangshihaoo/gitTest.git // 关联远程库
14、git push -u origin master // 推送至远程master分支
15、git remote -v // 查看远程库
16、 git remote rm origin // 删除远程库（解绑）
17、git clone git@github.com:Huangshihaoo/gitTest.git // 克隆远程库
18、git pull // 同步远程库




